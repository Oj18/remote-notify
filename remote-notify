#!/bin/bash

set -e -u -f

SCRIPTNAME="remote-notify"
show_usage () {
    echo "Usage: remote-notify [-s] [-n] (-c) (-p)"
    echo "Display a notification on a device using SSH and termux-notification."
    echo "IMPORTANT: Do not use the -c or --content option in the notification options, that is handled seperately in this -c."
    echo "  -s user@ip                            The user and IP to connect to using SSH."
    echo "  -p password                           SSH password to automate putting it in (if the password is needed in the first place)."
    echo "  -n \"notification options\"             The parameters for the notification call in the SSH session."
    echo "  -c \"notification content\"             The content in the notification."
    echo "  -h                                    Shows this message."
    echo "  -t                                    Shows the usage for termux-notification (taken from the 'termux-api-package' (offical))"
    exit 1
}

termux_usage () {
    echo "Usage: termux-notification [options]"
    echo "Display a system notification. Content text is read from stdin or specified using --content."
    echo "  --action action          action to execute when pressing the notification"
    echo "  --button1 text           text to show on the first notification button"
    echo "  --button1-action action  action to execute on the first notification button"
    echo "  --button2 text           text to show on the second notification button"
    echo "  --button2-action action  action to execute on the second notification button"
    echo "  --button3 text           text to show on the third notification button"
    echo "  --button3-action action  action to execute on the third notification button"
    echo "  --content content        content to show in the notification. Will take precedence over stdin."
    echo "  --id id                  notification id (will overwrite any previous notification with the same id)"
    echo "  --led-color rrggbb       color of the blinking led as RRGGBB (default: none)"
    echo "  --led-on milliseconds    number of milliseconds for the LED to be on while it's flashing (default: 800)"
    echo "  --led-off milliseconds   number of milliseconds for the LED to be off while it's flashing (default: 800)"
    echo "  --on-delete action       action to execute when the the notification is cleared"
    echo "  --priority prio          notification priority (high/low/max/min/default)"
    echo "  --sound                  play a sound with the notification"
    echo "  --title title            notification title to show"
    echo "  --vibrate pattern        vibrate pattern, comma separated as in 500,1000,200"
    echo 
    echo "-- From 'termux-api-package' (offical)"
    exit 1
}

OPT_NOT=""
OPT_SSH=""
OPT_CON=""
OPT_PAS=""

while getopts ":s:n:c:t:p:" o; do
    case "${o}" in
        s)
            OPT_SSH=${OPTARG}
            ;;
        n)
            OPT_NOT=${OPTARG}
            ;;
        c)
            OPT_CON=${OPTARG}
            ;;
        p)
            OPT_PAS=${OPTARG}
            ;;
        t)
            termux_usage
            ;;
        *)
            show_usage
            ;;
    esac
done
shift $((OPTIND-1))

if [ -z "${OPT_SSH}" ] || [ -z "${OPT_NOT}" ]; then
    show_usage
fi

if [ $# != 0 ]; then echo "$SCRIPTNAME: too many arguments"; exit 1; fi

contentecho=$(echo "echo -e \"${OPT_CON:=''}\"")

cmd=`echo $contentecho \| termux-notification $OPT_NOT`

echo $cmd

if [ -z $OPT_PAS ]; then
     echo "rip"
     ssh -p 8022 $OPT_SSH \`"$cmd"\`
else
     ./remote-notify-no-pass "$OPT_SSH" "$OPT_PAS" "$cmd"
fi
